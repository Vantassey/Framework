from numba import njit
    
@njit
def f_jacob(x,p):
    
    ### This code was generated by Python.
    ### Eichenbaum, Rebelo and Trabandt Model with Resistant Virus Strain.
    
    from sympy import DiracDelta
    from preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif
    from preprocessor.functions import Heaviside

    import numpy as np
    from numpy import log,exp,sin,cos,tan,sqrt,sign
    from numpy import maximum as Max, min as Min, abs as Abs
     
    # Initialize variables
    _xi_1 = 0 
    _xi_2 = 0 
    _xi_3 = 0 
    y__ = x[0]
    k__ = x[1]
    n__ = x[2]
    w__ = x[3]
    rk__ = x[4]
    x__ = x[5]
    c__ = x[6]
    s__ = x[7]
    s1__ = x[8]
    s2__ = x[9]
    i__ = x[10]
    i1__ = x[11]
    i2__ = x[12]
    r__ = x[13]
    r1__ = x[14]
    r2__ = x[15]
    v__ = x[16]
    ns__ = x[17]
    ni__ = x[18]
    nr__ = x[19]
    cs__ = x[20]
    ci__ = x[21]
    cr__ = x[22]
    tau__ = x[23]
    tau1__ = x[24]
    tau2__ = x[25]
    lambtilde__ = x[26]
    lamtau__ = x[27]
    lami__ = x[28]
    lams__ = x[29]
    lamr__ = x[30]
    dd__ = x[31]
    pop__ = x[32]
    Rb__ = x[33]
    pie__ = x[34]
    mc__ = x[35]
    F__ = x[36]
    Kf__ = x[37]
    rr__ = x[38]
    pbreve__ = x[39]
    yF__ = x[40]
    kF__ = x[41]
    nF__ = x[42]
    wF__ = x[43]
    rkF__ = x[44]
    xF__ = x[45]
    cF__ = x[46]
    sF__ = x[47]
    sF1__ = x[48]
    sF2__ = x[49]
    iF__ = x[50]
    iF1__ = x[51]
    iF2__ = x[52]
    rF__ = x[53]
    rF1__ = x[54]
    rF2__ = x[55]
    vF__ = x[56]
    nsF__ = x[57]
    niF__ = x[58]
    nrF__ = x[59]
    csF__ = x[60]
    ciF__ = x[61]
    crF__ = x[62]
    tauF__ = x[63]
    tauF1__ = x[64]
    tauF2__ = x[65]
    lambtildeF__ = x[66]
    lamtauF__ = x[67]
    lamiF__ = x[68]
    lamsF__ = x[69]
    lamrF__ = x[70]
    ddF__ = x[71]
    popF__ = x[72]
    RbF__ = x[73]
    pieF__ = x[74]
    mcF__ = x[75]
    FF__ = x[76]
    KfF__ = x[77]
    rrF__ = x[78]
    pbreveF__ = x[79]
    ei1__ = x[80]
    ei2__ = x[81]
    ed__ = x[82]


    # Set parameters
    xi = p[0]
    rpi = p[1]
    rx = p[2]
    gam = p[3]
    pi1 = p[4]
    pi2 = p[5]
    pi3 = p[6]
    mult = p[7]
    mult2 = p[8]
    pir = p[9]
    pid = p[10]
    betta = p[11]
    i_ini = p[12]
    d_ini = p[13]
    A = p[14]
    theta = p[15]
    alfa = p[16]
    inc_target = p[17]
    n_target = p[18]
    delta = p[19]
    g_ss = p[20]
    eta = p[21]
    xi_flex = p[22]
    pie_ss = p[23]
    rr_ss = p[24]
    Rb_ss = p[25]
    lockdown_policy = p[26]
    sigma = p[27]
    theta_lockdown = p[28]
    vaccination_policy = p[29]
    vaccination_rate = p[30]
    virus_resistant_strain = p[31]
    virus_variant_start = p[32]

    # Jacobian: 
    jacobian = np.zeros((80,83))
    jacobian[0,0] = 1
    jacobian[0,2] = -A*n__**(-1 + alfa)*k__**(1 - alfa)*alfa*pbreve__
    jacobian[0,39] = -A*n__**alfa*k__**(1 - alfa)
    jacobian[1,3] = -w__**(-1 + alfa)*rk__**(1 - alfa)*alfa**(1 - alfa)*(1 - alfa)**(-(1 - alfa))/A
    jacobian[1,4] = -w__**alfa*rk__**(-alfa)*alfa**(-alfa)*(1 - alfa)**(1 - (1 - alfa))/A
    jacobian[1,35] = 1
    jacobian[2,2] = -A*n__**(-2 + alfa)*k__**(1 - alfa)*mc__*alfa*(-1 + alfa)
    jacobian[2,3] = 1
    jacobian[2,35] = -A*n__**(-1 + alfa)*k__**(1 - alfa)*alfa
    jacobian[3,1] = delta
    jacobian[3,5] = -1
    jacobian[4,0] = 1
    jacobian[4,5] = -1
    jacobian[4,6] = -1
    jacobian[5,2] = 1
    jacobian[5,17] = -s1__
    jacobian[5,18] = -i1__
    jacobian[5,19] = -r1__
    jacobian[6,6] = 1
    jacobian[6,20] = -s1__
    jacobian[6,21] = -i1__
    jacobian[6,22] = -r1__
    jacobian[7,17] = -pi2*i1__*ni__*s1__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[7,18] = -pi2*i1__*ns__*s1__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[7,20] = -pi1*i1__*s1__*ci__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[7,21] = -pi1*i1__*s1__*cs__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[7,24] = 1
    jacobian[8,17] = -pi2*i2__*ni__*s2__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[8,18] = -pi2*i2__*ns__*s2__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[8,20] = -pi1*i2__*s2__*ci__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[8,21] = -pi1*i2__*s2__*cs__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[8,25] = 1
    jacobian[9,23] = 1
    jacobian[9,24] = -1
    jacobian[9,25] = -1
    jacobian[10,16] = 1
    jacobian[10,24] = 1
    jacobian[11,25] = 1
    jacobian[12,7] = 1 - Subs(Derivative(IfThenElse(_xi_1, s__ - tau__ - v__, 0), _xi_1), (_xi_1), (s__ - tau__ - v__)) - Subs(Derivative(IfThenElse(s__ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__ - tau__ - v__))
    jacobian[12,16] = Subs(Derivative(IfThenElse(_xi_1, s__ - tau__ - v__, 0), _xi_1), (_xi_1), (s__ - tau__ - v__)) + Subs(Derivative(IfThenElse(s__ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__ - tau__ - v__))
    jacobian[12,23] = Subs(Derivative(IfThenElse(_xi_1, s__ - tau__ - v__, 0), _xi_1), (_xi_1), (s__ - tau__ - v__)) + Subs(Derivative(IfThenElse(s__ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__ - tau__ - v__))
    jacobian[13,11] = pid + pir
    jacobian[13,24] = -1
    jacobian[13,80] = -1
    jacobian[14,12] = -(-pir - pid/mult2)*virus_resistant_strain
    jacobian[14,25] = -virus_resistant_strain
    jacobian[14,81] = -1
    jacobian[15,10] = 1
    jacobian[15,11] = -1
    jacobian[15,12] = -1
    jacobian[16,16] = -1
    jacobian[18,13] = 1
    jacobian[18,14] = -1
    jacobian[18,15] = -1
    jacobian[19,16] = 1
    jacobian[20,82] = -1
    jacobian[22,20] = 1
    jacobian[22,21] = -pi1*i1__*lamtau__/(lambtilde__ - pi1*i1__*ci__*lamtau__)**2
    jacobian[22,26] = (lambtilde__ - pi1*i1__*ci__*lamtau__)**(-2)
    jacobian[22,27] = -pi1*i1__*ci__/(lambtilde__ - pi1*i1__*ci__*lamtau__)**2
    jacobian[23,21] = 1
    jacobian[23,26] = lambtilde__**(-2)
    jacobian[24,22] = 1
    jacobian[24,26] = lambtilde__**(-2)
    jacobian[25,3] = -lambtilde__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[25,17] = 1
    jacobian[25,18] = -pi2*i1__*(1 - theta_lockdown*lockdown_policy)*lamtau__/theta
    jacobian[25,26] = -w__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[25,27] = -pi2*i1__*ni__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[26,3] = -lambtilde__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[26,18] = 1
    jacobian[26,26] = -w__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[27,3] = -lambtilde__/theta
    jacobian[27,19] = 1
    jacobian[27,26] = -w__/theta
    jacobian[28,4] = -betta*lambtilde__
    jacobian[28,26] = 1 - betta*(1 - delta + rk__)
    jacobian[29,27] = -1
    jacobian[29,28] = 1
    jacobian[29,29] = -1
    jacobian[30,11] = -(pi3 + pi1*cs__*ci__ + pi2*ni__*ns__)*lamtau__
    jacobian[30,20] = lambtilde__ - pi1*i1__*ci__*lamtau__ - cs__**(-1)
    jacobian[30,29] = -1 + betta**(-1)
    jacobian[31,21] = lambtilde__ - ci__**(-1)
    jacobian[31,28] = -1 + pid + pir + betta**(-1)
    jacobian[32,22] = lambtilde__ - cr__**(-1)
    jacobian[32,30] = -1 + betta**(-1)
    jacobian[33,26] = 1 - Rb__*betta/pie__
    jacobian[33,33] = -betta*lambtilde__/pie__
    jacobian[34,33] = -1/pie__
    jacobian[34,38] = 1
    jacobian[35,0] = -gam*mc__*lambtilde__
    jacobian[35,26] = -y__*gam*mc__
    jacobian[35,35] = -y__*gam*lambtilde__
    jacobian[35,37] = 1 - xi*betta*pie__**(gam/(-1 + gam))
    jacobian[36,0] = -lambtilde__
    jacobian[36,26] = -y__
    jacobian[36,36] = 1 - xi*betta*pie__**((-1 + gam)**(-1))
    jacobian[37,34] = -xi*F__*pie__**(-1 + (-1 + gam)**(-1))*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**(-(-1 + gam))/(1 - xi*pie__**((-1 + gam)**(-1)))
    jacobian[37,36] = -((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**(-(-1 + gam))
    jacobian[37,37] = 1
    jacobian[38,34] = (xi*gam*pie__**(-1 + gam/(-1 + gam))/((-1 + gam)*pbreve__) - xi*(1 - xi)*gam*pie__**(-1 + (-1 + gam)**(-1))*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam/((-1 + gam)*(1 - xi*pie__**((-1 + gam)**(-1)))))/((1 - xi)*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam + xi*pie__**(gam/(-1 + gam))/pbreve__)**2
    jacobian[38,39] = 1 - xi*pie__**(gam/(-1 + gam))/(pbreve__**2*((1 - xi)*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam + xi*pie__**(gam/(-1 + gam))/pbreve__)**2)
    jacobian[39,0] = -rx/y__
    jacobian[39,33] = 1
    jacobian[39,34] = -rpi/pie__
    jacobian[39,40] = rx/yF__
    jacobian[40,40] = 1
    jacobian[40,42] = -A*kF__**(1 - alfa)*nF__**(-1 + alfa)*alfa*pbreveF__
    jacobian[40,79] = -A*kF__**(1 - alfa)*nF__**alfa
    jacobian[41,43] = -alfa**(1 - alfa)*wF__**(-1 + alfa)*(1 - alfa)**(-(1 - alfa))*rkF__**(1 - alfa)/A
    jacobian[41,44] = -alfa**(-alfa)*wF__**alfa*(1 - alfa)**(1 - (1 - alfa))*rkF__**(-alfa)/A
    jacobian[41,75] = 1
    jacobian[42,42] = -A*kF__**(1 - alfa)*nF__**(-2 + alfa)*alfa*(-1 + alfa)*mcF__
    jacobian[42,43] = 1
    jacobian[42,75] = -A*kF__**(1 - alfa)*nF__**(-1 + alfa)*alfa
    jacobian[43,41] = delta
    jacobian[43,45] = -1
    jacobian[44,40] = 1
    jacobian[44,45] = -1
    jacobian[44,46] = -1
    jacobian[45,42] = 1
    jacobian[45,57] = -sF1__
    jacobian[45,58] = -iF1__
    jacobian[45,59] = -rF1__
    jacobian[46,46] = 1
    jacobian[46,60] = -sF1__
    jacobian[46,61] = -iF1__
    jacobian[46,62] = -rF1__
    jacobian[47,57] = -pi2*sF1__*iF1__*niF__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[47,58] = -pi2*sF1__*iF1__*nsF__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[47,60] = -pi1*sF1__*iF1__*ciF__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[47,61] = -pi1*sF1__*iF1__*csF__*(1 - theta_lockdown*lockdown_policy)**2
    jacobian[47,64] = 1
    jacobian[48,57] = -pi2*sF2__*iF2__*niF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[48,58] = -pi2*sF2__*iF2__*nsF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[48,60] = -pi1*sF2__*iF2__*ciF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[48,61] = -pi1*sF2__*iF2__*csF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    jacobian[48,65] = 1
    jacobian[49,63] = 1
    jacobian[49,64] = -1
    jacobian[49,65] = -1
    jacobian[50,56] = 1
    jacobian[50,64] = 1
    jacobian[51,65] = 1
    jacobian[52,47] = 1 - Subs(Derivative(IfThenElse(_xi_1, sF__ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__ - tauF__ - vF__)) - Subs(Derivative(IfThenElse(sF__ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__ - tauF__ - vF__))
    jacobian[52,56] = Subs(Derivative(IfThenElse(_xi_1, sF__ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__ - tauF__ - vF__)) + Subs(Derivative(IfThenElse(sF__ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__ - tauF__ - vF__))
    jacobian[52,63] = Subs(Derivative(IfThenElse(_xi_1, sF__ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__ - tauF__ - vF__)) + Subs(Derivative(IfThenElse(sF__ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__ - tauF__ - vF__))
    jacobian[53,51] = pid + pir
    jacobian[53,64] = -1
    jacobian[53,80] = -1
    jacobian[54,52] = -(-pir - pid/mult2)*virus_resistant_strain
    jacobian[54,65] = -virus_resistant_strain
    jacobian[54,81] = -1
    jacobian[55,50] = 1
    jacobian[55,51] = -1
    jacobian[55,52] = -1
    jacobian[56,56] = -1
    jacobian[58,53] = 1
    jacobian[58,54] = -1
    jacobian[58,55] = -1
    jacobian[59,56] = 1
    jacobian[60,82] = -1
    jacobian[62,60] = 1
    jacobian[62,61] = -pi1*iF1__*lamtauF__/(lambtildeF__ - pi1*iF1__*ciF__*lamtauF__)**2
    jacobian[62,66] = (lambtildeF__ - pi1*iF1__*ciF__*lamtauF__)**(-2)
    jacobian[62,67] = -pi1*iF1__*ciF__/(lambtildeF__ - pi1*iF1__*ciF__*lamtauF__)**2
    jacobian[63,61] = 1
    jacobian[63,66] = lambtildeF__**(-2)
    jacobian[64,62] = 1
    jacobian[64,66] = lambtildeF__**(-2)
    jacobian[65,43] = -(1 - theta_lockdown*lockdown_policy)*lambtildeF__/theta
    jacobian[65,57] = 1
    jacobian[65,58] = -pi2*iF1__*(1 - theta_lockdown*lockdown_policy)*lamtauF__/theta
    jacobian[65,66] = -wF__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[65,67] = -pi2*iF1__*niF__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[66,43] = -(1 - theta_lockdown*lockdown_policy)*lambtildeF__/theta
    jacobian[66,58] = 1
    jacobian[66,66] = -wF__*(1 - theta_lockdown*lockdown_policy)/theta
    jacobian[67,43] = -lambtildeF__/theta
    jacobian[67,59] = 1
    jacobian[67,66] = -wF__/theta
    jacobian[68,44] = -betta*lambtildeF__
    jacobian[68,66] = 1 - (1 - delta + rkF__)*betta
    jacobian[69,67] = -1
    jacobian[69,68] = 1
    jacobian[69,69] = -1
    jacobian[70,51] = -(pi3 + pi1*csF__*ciF__ + pi2*niF__*nsF__)*lamtauF__
    jacobian[70,60] = lambtildeF__ - pi1*iF1__*ciF__*lamtauF__ - csF__**(-1)
    jacobian[70,69] = -1 + betta**(-1)
    jacobian[71,61] = lambtildeF__ - ciF__**(-1)
    jacobian[71,68] = -1 + pid + pir + betta**(-1)
    jacobian[72,62] = lambtildeF__ - crF__**(-1)
    jacobian[72,70] = -1 + betta**(-1)
    jacobian[73,66] = 1 - betta*RbF__/pieF__
    jacobian[73,73] = -betta*lambtildeF__/pieF__
    jacobian[74,73] = -1/pieF__
    jacobian[74,78] = 1
    jacobian[75,40] = -gam*mcF__*lambtildeF__
    jacobian[75,66] = -gam*yF__*mcF__
    jacobian[75,75] = -gam*yF__*lambtildeF__
    jacobian[75,77] = 1 - betta*pieF__**(gam/(-1 + gam))*xi_flex
    jacobian[76,40] = -lambtildeF__
    jacobian[76,66] = -yF__
    jacobian[76,76] = 1 - betta*pieF__**((-1 + gam)**(-1))*xi_flex
    jacobian[77,74] = -FF__*pieF__**(-1 + (-1 + gam)**(-1))*((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**(-(-1 + gam))*xi_flex/(1 - pieF__**((-1 + gam)**(-1))*xi_flex)
    jacobian[77,76] = -((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**(-(-1 + gam))
    jacobian[77,77] = 1
    jacobian[78,74] = (gam*pieF__**(-1 + gam/(-1 + gam))*xi_flex/((-1 + gam)*pbreveF__) - gam*pieF__**(-1 + (-1 + gam)**(-1))*((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*xi_flex*(1 - xi_flex)/((-1 + gam)*(1 - pieF__**((-1 + gam)**(-1))*xi_flex)))/(((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*(1 - xi_flex) + pieF__**(gam/(-1 + gam))*xi_flex/pbreveF__)**2
    jacobian[78,79] = 1 - pieF__**(gam/(-1 + gam))*xi_flex/(pbreveF__**2*(((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*(1 - xi_flex) + pieF__**(gam/(-1 + gam))*xi_flex/pbreveF__)**2)
    jacobian[79,73] = 1
    jacobian[79,74] = -rpi/pieF__

    return jacobian 
