from numba import njit
    
@njit
def f_sparse(x, p, order=1, ind=None):
        
    ### This code was generated by Python.
    ### Eichenbaum, Rebelo and Trabandt Model with Resistant Virus Strain.
    
    # First order derivatives are employed in most of the models to compute Jacobian.
    # Higher order derivatives are used in nonlinear rational expectations models.
    
    from scipy.special import lambertw as LambertW
    from preprocessor.functions import Heaviside,Max,Min,Abs,DiracDelta
    from preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif

    import numpy as np
    from numpy import exp, sin, cos, tan, sqrt, sign, log
        
    # Initialize variables
    _xi_1 = 0 
    _xi_2 = 0 
    _xi_3 = 0 
    w__p1_ = x[3]
    rk__p1_ = x[4]
    ns__p1_ = x[17]
    ni__p1_ = x[18]
    nr__p1_ = x[19]
    cs__p1_ = x[20]
    ci__p1_ = x[21]
    cr__p1_ = x[22]
    lambtilde__p1_ = x[26]
    lamtau__p1_ = x[27]
    lami__p1_ = x[28]
    lams__p1_ = x[29]
    lamr__p1_ = x[30]
    pie__p1_ = x[34]
    F__p1_ = x[36]
    Kf__p1_ = x[37]
    wF__p1_ = x[43]
    rkF__p1_ = x[44]
    nsF__p1_ = x[57]
    niF__p1_ = x[58]
    nrF__p1_ = x[59]
    csF__p1_ = x[60]
    ciF__p1_ = x[61]
    crF__p1_ = x[62]
    lambtildeF__p1_ = x[66]
    lamtauF__p1_ = x[67]
    lamsF__p1_ = x[69]
    lamrF__p1_ = x[70]
    pieF__p1_ = x[74]
    FF__p1_ = x[76]
    KfF__p1_ = x[77]
    y__ = x[80]
    k__ = x[81]
    n__ = x[82]
    w__ = x[83]
    rk__ = x[84]
    x__ = x[85]
    c__ = x[86]
    s__ = x[87]
    s1__ = x[88]
    s2__ = x[89]
    i__ = x[90]
    i1__ = x[91]
    i2__ = x[92]
    r__ = x[93]
    r1__ = x[94]
    r2__ = x[95]
    v__ = x[96]
    ns__ = x[97]
    ni__ = x[98]
    nr__ = x[99]
    cs__ = x[100]
    ci__ = x[101]
    cr__ = x[102]
    tau__ = x[103]
    tau1__ = x[104]
    tau2__ = x[105]
    lambtilde__ = x[106]
    lamtau__ = x[107]
    lami__ = x[108]
    lams__ = x[109]
    lamr__ = x[110]
    dd__ = x[111]
    pop__ = x[112]
    Rb__ = x[113]
    pie__ = x[114]
    mc__ = x[115]
    F__ = x[116]
    Kf__ = x[117]
    rr__ = x[118]
    pbreve__ = x[119]
    yF__ = x[120]
    kF__ = x[121]
    nF__ = x[122]
    wF__ = x[123]
    rkF__ = x[124]
    xF__ = x[125]
    cF__ = x[126]
    sF__ = x[127]
    sF1__ = x[128]
    sF2__ = x[129]
    iF__ = x[130]
    iF1__ = x[131]
    iF2__ = x[132]
    rF__ = x[133]
    rF1__ = x[134]
    rF2__ = x[135]
    vF__ = x[136]
    nsF__ = x[137]
    niF__ = x[138]
    nrF__ = x[139]
    csF__ = x[140]
    ciF__ = x[141]
    crF__ = x[142]
    tauF__ = x[143]
    tauF1__ = x[144]
    tauF2__ = x[145]
    lambtildeF__ = x[146]
    lamtauF__ = x[147]
    lamiF__ = x[148]
    lamsF__ = x[149]
    lamrF__ = x[150]
    ddF__ = x[151]
    popF__ = x[152]
    RbF__ = x[153]
    pieF__ = x[154]
    mcF__ = x[155]
    FF__ = x[156]
    KfF__ = x[157]
    rrF__ = x[158]
    pbreveF__ = x[159]
    k__m1_ = x[161]
    s__m1_ = x[167]
    s1__m1_ = x[168]
    s2__m1_ = x[169]
    i1__m1_ = x[171]
    i2__m1_ = x[172]
    r1__m1_ = x[174]
    r2__m1_ = x[175]
    dd__m1_ = x[191]
    pop__m1_ = x[192]
    pbreve__m1_ = x[199]
    kF__m1_ = x[201]
    sF__m1_ = x[207]
    sF1__m1_ = x[208]
    sF2__m1_ = x[209]
    iF1__m1_ = x[211]
    iF2__m1_ = x[212]
    rF1__m1_ = x[214]
    rF2__m1_ = x[215]
    ddF__m1_ = x[231]
    popF__m1_ = x[232]
    pbreveF__m1_ = x[239]
    ei1__ = x[240]
    ei2__ = x[241]
    ed__ = x[242]

    # Set parameters
    xi = p[0]
    rpi = p[1]
    rx = p[2]
    gam = p[3]
    pi1 = p[4]
    pi2 = p[5]
    pi3 = p[6]
    mult = p[7]
    mult2 = p[8]
    pir = p[9]
    pid = p[10]
    betta = p[11]
    i_ini = p[12]
    d_ini = p[13]
    A = p[14]
    theta = p[15]
    alfa = p[16]
    inc_target = p[17]
    n_target = p[18]
    delta = p[19]
    g_ss = p[20]
    eta = p[21]
    xi_flex = p[22]
    pie_ss = p[23]
    rr_ss = p[24]
    Rb_ss = p[25]
    lockdown_policy = p[26]
    sigma = p[27]
    theta_lockdown = p[28]
    vaccination_policy = p[29]
    vaccination_rate = p[30]
    virus_resistant_strain = p[31]
    virus_variant_start = p[32]

    # Function:
    function = np.zeros(80)
    function[0] = y__ - A*n__**alfa*k__m1_**(1 - alfa)*pbreve__
    function[1] = mc__ - w__**alfa*rk__**(1 - alfa)*alfa**(-alfa)*(1 - alfa)**(-(1 - alfa))/A
    function[2] = w__ - A*n__**(-1 + alfa)*mc__*alfa*k__m1_**(1 - alfa)
    function[3] = k__ - (x__ + (1 - delta)*k__m1_)
    function[4] = y__ - (c__ + g_ss + x__)
    function[5] = n__ - (ni__*i1__m1_ + nr__*r1__m1_ + ns__*s1__m1_)
    function[6] = c__ - (ci__*i1__m1_ + cr__*r1__m1_ + cs__*s1__m1_)
    function[7] = tau1__ - (1 - theta_lockdown*lockdown_policy)**2*(pi3*s1__m1_*i1__m1_ + pi1*cs__*ci__*s1__m1_*i1__m1_ + pi2*ni__*ns__*s1__m1_*i1__m1_)
    function[8] = tau2__ - (pi3*mult*s2__m1_*i2__m1_ + pi1*cs__*ci__*s2__m1_*i2__m1_ + pi2*ni__*ns__*s2__m1_*i2__m1_)*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain
    function[9] = tau__ - (tau1__ + tau2__)
    function[10] = s1__ - (s1__m1_ - tau1__ - v__)
    function[11] = s2__ - (s2__m1_ - tau2__)
    function[12] = s__ - IfThenElse(s__m1_ - tau__ - v__, s__m1_ - tau__ - v__, 0)
    function[13] = i1__ - (ei1__ + i1__m1_ + tau1__ - (pid + pir)*i1__m1_)
    function[14] = i2__ - (ei2__ + i2__m1_ + virus_resistant_strain*(tau2__ - i2__m1_*(pir + pid/mult2)))
    function[15] = i__ - (i1__ + i2__)
    function[16] = r1__ - (r1__m1_ + v__ + pir*i1__m1_)
    function[17] = r2__ - (r2__m1_ + pir*i2__m1_)
    function[18] = r__ - (r1__ + r2__)
    function[19] = v__ - s1__m1_*vaccination_rate
    function[20] = dd__ - (dd__m1_ + ed__ + pid*i1__m1_ + pid*i2__m1_/mult2)
    function[21] = pop__ - (pop__m1_ - pid*i1__m1_ - pid*i2__m1_/mult2)
    function[22] = lamtau__ - (-cs__ + lamtau__ + (lambtilde__ - pi1*ci__*i1__m1_*lamtau__)**(-1))
    function[23] = ci__ - lambtilde__**(-1)
    function[24] = cr__ - lambtilde__**(-1)
    function[25] = ns__ - (w__*lambtilde__ + pi2*ni__*i1__m1_*lamtau__)*(1 - theta_lockdown*lockdown_policy)/theta
    function[26] = ni__ - w__*lambtilde__*(1 - theta_lockdown*lockdown_policy)/theta
    function[27] = nr__ - w__*lambtilde__/theta
    function[28] = rk__ - (-lambtilde__ + rk__ + betta*(1 - delta + rk__p1_)*lambtilde__p1_)
    function[29] = lami__ - (lams__ + lamtau__)
    function[30] = cs__ - (cs__ + lams__p1_ - lams__/betta + lamtau__p1_*(pi3*i1__ + pi1*i1__*ci__p1_*cs__p1_ + pi2*i1__*ns__p1_*ni__p1_) + (-1/2)*theta*ns__p1_**2 + (-cs__p1_ + w__p1_*ns__p1_)*lambtilde__p1_ + log(cs__p1_))
    function[31] = ci__ - (ci__ - lami__/betta + pir*lamr__p1_ + (-1/2)*theta*ni__p1_**2 + (-ci__p1_ + w__p1_*ni__p1_)*lambtilde__p1_ + (1 - pid - pir)*lami__p1_ + log(ci__p1_))
    function[32] = cr__ - (cr__ + lamr__p1_ - lamr__/betta + (-1/2)*theta*nr__p1_**2 + (-cr__p1_ + w__p1_*nr__p1_)*lambtilde__p1_ + log(cr__p1_))
    function[33] = lambtilde__ - Rb__*betta*lambtilde__p1_/pie__p1_
    function[34] = rr__ - Rb__/pie__p1_
    function[35] = Kf__ - (xi*betta*Kf__p1_*pie__p1_**(gam/(-1 + gam)) + y__*gam*mc__*lambtilde__)
    function[36] = F__ - (y__*lambtilde__ + xi*betta*F__p1_*pie__p1_**((-1 + gam)**(-1)))
    function[37] = x__ - (-Kf__ + x__ + F__*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**(-(-1 + gam)))
    function[38] = pbreve__ - ((1 - xi)*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam + xi*pie__**(gam/(-1 + gam))/pbreve__m1_)**(-1)
    function[39] = Rb__ - (rr_ss + rpi*log(pie__/pie_ss) + rx*log(y__/yF__))
    function[40] = yF__ - A*nF__**alfa*pbreveF__*kF__m1_**(1 - alfa)
    function[41] = mcF__ - alfa**(-alfa)*wF__**alfa*(1 - alfa)**(-(1 - alfa))*rkF__**(1 - alfa)/A
    function[42] = wF__ - A*nF__**(-1 + alfa)*alfa*mcF__*kF__m1_**(1 - alfa)
    function[43] = kF__ - (xF__ + (1 - delta)*kF__m1_)
    function[44] = yF__ - (cF__ + g_ss + xF__)
    function[45] = nF__ - (niF__*iF1__m1_ + nrF__*rF1__m1_ + nsF__*sF1__m1_)
    function[46] = cF__ - (ciF__*iF1__m1_ + crF__*rF1__m1_ + csF__*sF1__m1_)
    function[47] = tauF1__ - (pi3*sF1__m1_*iF1__m1_ + pi1*csF__*ciF__*sF1__m1_*iF1__m1_ + pi2*niF__*nsF__*sF1__m1_*iF1__m1_)*(1 - theta_lockdown*lockdown_policy)**2
    function[48] = tauF2__ - (1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*(pi3*mult*sF2__m1_*iF2__m1_ + pi1*csF__*ciF__*sF2__m1_*iF2__m1_ + pi2*niF__*nsF__*sF2__m1_*iF2__m1_)
    function[49] = tauF__ - (tauF1__ + tauF2__)
    function[50] = sF1__ - (sF1__m1_ - tauF1__ - vF__)
    function[51] = sF2__ - (sF2__m1_ - tauF2__)
    function[52] = sF__ - IfThenElse(sF__m1_ - tauF__ - vF__, sF__m1_ - tauF__ - vF__, 0)
    function[53] = iF1__ - (ei1__ + iF1__m1_ + tauF1__ - (pid + pir)*iF1__m1_)
    function[54] = iF2__ - (ei2__ + iF2__m1_ + (tauF2__ - (pir + pid/mult2)*iF2__m1_)*virus_resistant_strain)
    function[55] = iF__ - (iF1__ + iF2__)
    function[56] = rF1__ - (rF1__m1_ + vF__ + pir*iF1__m1_)
    function[57] = rF2__ - (rF2__m1_ + pir*iF2__m1_)
    function[58] = rF__ - (rF1__ + rF2__)
    function[59] = vF__ - vaccination_rate*sF1__m1_
    function[60] = ddF__ - (ddF__m1_ + ed__ + pid*iF1__m1_ + pid*iF2__m1_/mult2)
    function[61] = popF__ - (popF__m1_ - pid*iF1__m1_ - pid*iF2__m1_/mult2)
    function[62] = lamtauF__ - (-csF__ + lamtauF__ + (lambtildeF__ - pi1*ciF__*lamtauF__*iF1__m1_)**(-1))
    function[63] = ciF__ - lambtildeF__**(-1)
    function[64] = crF__ - lambtildeF__**(-1)
    function[65] = nsF__ - (wF__*lambtildeF__ + pi2*niF__*lamtauF__*iF1__m1_)*(1 - theta_lockdown*lockdown_policy)/theta
    function[66] = niF__ - wF__*(1 - theta_lockdown*lockdown_policy)*lambtildeF__/theta
    function[67] = nrF__ - wF__*lambtildeF__/theta
    function[68] = rkF__ - (-lambtildeF__ + rkF__ + betta*(1 - delta + rkF__p1_)*lambtildeF__p1_)
    function[69] = lamiF__ - (lamsF__ + lamtauF__)
    function[70] = csF__ - (csF__ + lamsF__p1_ - lamsF__/betta + (-1/2)*theta*nsF__p1_**2 + (-csF__p1_ + wF__p1_*nsF__p1_)*lambtildeF__p1_ + (pi3*iF1__ + pi1*iF1__*csF__p1_*ciF__p1_ + pi2*iF1__*niF__p1_*nsF__p1_)*lamtauF__p1_ + log(csF__p1_))
    function[71] = ciF__ - (ciF__ - lamiF__/betta + pir*lamrF__p1_ + (-1/2)*theta*niF__p1_**2 + (-ciF__p1_ + wF__p1_*niF__p1_)*lambtildeF__p1_ + (1 - pid - pir)*lamiF__ + log(ciF__p1_))
    function[72] = crF__ - (crF__ + lamrF__p1_ - lamrF__/betta + (-1/2)*theta*nrF__p1_**2 + (-crF__p1_ + wF__p1_*nrF__p1_)*lambtildeF__p1_ + log(crF__p1_))
    function[73] = lambtildeF__ - betta*RbF__*lambtildeF__p1_/pieF__p1_
    function[74] = rrF__ - RbF__/pieF__p1_
    function[75] = KfF__ - (betta*pieF__p1_**(gam/(-1 + gam))*xi_flex*KfF__p1_ + gam*yF__*mcF__*lambtildeF__)
    function[76] = FF__ - (yF__*lambtildeF__ + betta*pieF__p1_**((-1 + gam)**(-1))*xi_flex*FF__p1_)
    function[77] = KfF__ - FF__*((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**(-(-1 + gam))
    function[78] = pbreveF__ - (((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*(1 - xi_flex) + pieF__**(gam/(-1 + gam))*xi_flex/pbreveF__m1_)**(-1)
    function[79] = RbF__ - (Rb_ss + rpi*log(pieF__/pie_ss))

    if order == 0:
        return function
    
    # Jacobian: 
    row_ind = []; col_ind = []; jacobian = []
    row_ind.append(0); col_ind.append(80); jacobian.append(1)
    row_ind.append(0); col_ind.append(82); jacobian.append(-A*n__**(-1 + alfa)*alfa*k__m1_**(1 - alfa)*pbreve__)
    row_ind.append(0); col_ind.append(119); jacobian.append(-A*n__**alfa*k__m1_**(1 - alfa))
    row_ind.append(0); col_ind.append(161); jacobian.append(-A*n__**alfa*(1 - alfa)*k__m1_**(-alfa)*pbreve__)
    row_ind.append(1); col_ind.append(83); jacobian.append(-w__**(-1 + alfa)*rk__**(1 - alfa)*alfa**(1 - alfa)*(1 - alfa)**(-(1 - alfa))/A)
    row_ind.append(1); col_ind.append(84); jacobian.append(-w__**alfa*rk__**(-alfa)*alfa**(-alfa)*(1 - alfa)**(1 - (1 - alfa))/A)
    row_ind.append(1); col_ind.append(115); jacobian.append(1)
    row_ind.append(2); col_ind.append(82); jacobian.append(-A*n__**(-2 + alfa)*mc__*alfa*(-1 + alfa)*k__m1_**(1 - alfa))
    row_ind.append(2); col_ind.append(83); jacobian.append(1)
    row_ind.append(2); col_ind.append(115); jacobian.append(-A*n__**(-1 + alfa)*alfa*k__m1_**(1 - alfa))
    row_ind.append(2); col_ind.append(161); jacobian.append(-A*n__**(-1 + alfa)*mc__*alfa*(1 - alfa)*k__m1_**(-alfa))
    row_ind.append(3); col_ind.append(81); jacobian.append(1)
    row_ind.append(3); col_ind.append(85); jacobian.append(-1)
    row_ind.append(3); col_ind.append(161); jacobian.append(-1 + delta)
    row_ind.append(4); col_ind.append(80); jacobian.append(1)
    row_ind.append(4); col_ind.append(85); jacobian.append(-1)
    row_ind.append(4); col_ind.append(86); jacobian.append(-1)
    row_ind.append(5); col_ind.append(82); jacobian.append(1)
    row_ind.append(5); col_ind.append(97); jacobian.append(-s1__m1_)
    row_ind.append(5); col_ind.append(98); jacobian.append(-i1__m1_)
    row_ind.append(5); col_ind.append(99); jacobian.append(-r1__m1_)
    row_ind.append(5); col_ind.append(168); jacobian.append(-ns__)
    row_ind.append(5); col_ind.append(171); jacobian.append(-ni__)
    row_ind.append(5); col_ind.append(174); jacobian.append(-nr__)
    row_ind.append(6); col_ind.append(86); jacobian.append(1)
    row_ind.append(6); col_ind.append(100); jacobian.append(-s1__m1_)
    row_ind.append(6); col_ind.append(101); jacobian.append(-i1__m1_)
    row_ind.append(6); col_ind.append(102); jacobian.append(-r1__m1_)
    row_ind.append(6); col_ind.append(168); jacobian.append(-cs__)
    row_ind.append(6); col_ind.append(171); jacobian.append(-ci__)
    row_ind.append(6); col_ind.append(174); jacobian.append(-cr__)
    row_ind.append(7); col_ind.append(97); jacobian.append(-pi2*ni__*s1__m1_*i1__m1_*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(7); col_ind.append(98); jacobian.append(-pi2*ns__*s1__m1_*i1__m1_*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(7); col_ind.append(100); jacobian.append(-pi1*ci__*s1__m1_*i1__m1_*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(7); col_ind.append(101); jacobian.append(-pi1*cs__*s1__m1_*i1__m1_*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(7); col_ind.append(104); jacobian.append(1)
    row_ind.append(7); col_ind.append(168); jacobian.append(-(pi3*i1__m1_ + pi1*cs__*ci__*i1__m1_ + pi2*ni__*ns__*i1__m1_)*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(7); col_ind.append(171); jacobian.append(-(pi3*s1__m1_ + pi1*cs__*ci__*s1__m1_ + pi2*ni__*ns__*s1__m1_)*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(8); col_ind.append(97); jacobian.append(-pi2*ni__*s2__m1_*i2__m1_*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(8); col_ind.append(98); jacobian.append(-pi2*ns__*s2__m1_*i2__m1_*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(8); col_ind.append(100); jacobian.append(-pi1*ci__*s2__m1_*i2__m1_*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(8); col_ind.append(101); jacobian.append(-pi1*cs__*s2__m1_*i2__m1_*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(8); col_ind.append(105); jacobian.append(1)
    row_ind.append(8); col_ind.append(169); jacobian.append(-(pi3*mult*i2__m1_ + pi1*cs__*ci__*i2__m1_ + pi2*ni__*ns__*i2__m1_)*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(8); col_ind.append(172); jacobian.append(-(pi3*mult*s2__m1_ + pi1*cs__*ci__*s2__m1_ + pi2*ni__*ns__*s2__m1_)*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain)
    row_ind.append(9); col_ind.append(103); jacobian.append(1)
    row_ind.append(9); col_ind.append(104); jacobian.append(-1)
    row_ind.append(9); col_ind.append(105); jacobian.append(-1)
    row_ind.append(10); col_ind.append(88); jacobian.append(1)
    row_ind.append(10); col_ind.append(96); jacobian.append(1)
    row_ind.append(10); col_ind.append(104); jacobian.append(1)
    row_ind.append(10); col_ind.append(168); jacobian.append(-1)
    row_ind.append(11); col_ind.append(89); jacobian.append(1)
    row_ind.append(11); col_ind.append(105); jacobian.append(1)
    row_ind.append(11); col_ind.append(169); jacobian.append(-1)
    row_ind.append(12); col_ind.append(87); jacobian.append(1)
    row_ind.append(12); col_ind.append(96); jacobian.append(Subs(Derivative(IfThenElse(_xi_1, s__m1_ - tau__ - v__, 0), _xi_1), (_xi_1), (s__m1_ - tau__ - v__)) + Subs(Derivative(IfThenElse(s__m1_ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__m1_ - tau__ - v__)))
    row_ind.append(12); col_ind.append(103); jacobian.append(Subs(Derivative(IfThenElse(_xi_1, s__m1_ - tau__ - v__, 0), _xi_1), (_xi_1), (s__m1_ - tau__ - v__)) + Subs(Derivative(IfThenElse(s__m1_ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__m1_ - tau__ - v__)))
    row_ind.append(12); col_ind.append(167); jacobian.append(-Subs(Derivative(IfThenElse(_xi_1, s__m1_ - tau__ - v__, 0), _xi_1), (_xi_1), (s__m1_ - tau__ - v__)) - Subs(Derivative(IfThenElse(s__m1_ - tau__ - v__, _xi_2, 0), _xi_2), (_xi_2), (s__m1_ - tau__ - v__)))
    row_ind.append(13); col_ind.append(91); jacobian.append(1)
    row_ind.append(13); col_ind.append(104); jacobian.append(-1)
    row_ind.append(13); col_ind.append(171); jacobian.append(-1 + pid + pir)
    row_ind.append(13); col_ind.append(240); jacobian.append(-1)
    row_ind.append(14); col_ind.append(92); jacobian.append(1)
    row_ind.append(14); col_ind.append(105); jacobian.append(-virus_resistant_strain)
    row_ind.append(14); col_ind.append(172); jacobian.append(-1 - (-pir - pid/mult2)*virus_resistant_strain)
    row_ind.append(14); col_ind.append(241); jacobian.append(-1)
    row_ind.append(15); col_ind.append(90); jacobian.append(1)
    row_ind.append(15); col_ind.append(91); jacobian.append(-1)
    row_ind.append(15); col_ind.append(92); jacobian.append(-1)
    row_ind.append(16); col_ind.append(94); jacobian.append(1)
    row_ind.append(16); col_ind.append(96); jacobian.append(-1)
    row_ind.append(16); col_ind.append(171); jacobian.append(-pir)
    row_ind.append(16); col_ind.append(174); jacobian.append(-1)
    row_ind.append(17); col_ind.append(95); jacobian.append(1)
    row_ind.append(17); col_ind.append(172); jacobian.append(-pir)
    row_ind.append(17); col_ind.append(175); jacobian.append(-1)
    row_ind.append(18); col_ind.append(93); jacobian.append(1)
    row_ind.append(18); col_ind.append(94); jacobian.append(-1)
    row_ind.append(18); col_ind.append(95); jacobian.append(-1)
    row_ind.append(19); col_ind.append(96); jacobian.append(1)
    row_ind.append(19); col_ind.append(168); jacobian.append(-vaccination_rate)
    row_ind.append(20); col_ind.append(111); jacobian.append(1)
    row_ind.append(20); col_ind.append(171); jacobian.append(-pid)
    row_ind.append(20); col_ind.append(172); jacobian.append(-pid/mult2)
    row_ind.append(20); col_ind.append(191); jacobian.append(-1)
    row_ind.append(20); col_ind.append(242); jacobian.append(-1)
    row_ind.append(21); col_ind.append(112); jacobian.append(1)
    row_ind.append(21); col_ind.append(171); jacobian.append(pid)
    row_ind.append(21); col_ind.append(172); jacobian.append(pid/mult2)
    row_ind.append(21); col_ind.append(192); jacobian.append(-1)
    row_ind.append(22); col_ind.append(100); jacobian.append(1)
    row_ind.append(22); col_ind.append(101); jacobian.append(-pi1*i1__m1_*lamtau__/(lambtilde__ - pi1*ci__*i1__m1_*lamtau__)**2)
    row_ind.append(22); col_ind.append(106); jacobian.append((lambtilde__ - pi1*ci__*i1__m1_*lamtau__)**(-2))
    row_ind.append(22); col_ind.append(107); jacobian.append(-pi1*ci__*i1__m1_/(lambtilde__ - pi1*ci__*i1__m1_*lamtau__)**2)
    row_ind.append(22); col_ind.append(171); jacobian.append(-pi1*ci__*lamtau__/(lambtilde__ - pi1*ci__*i1__m1_*lamtau__)**2)
    row_ind.append(23); col_ind.append(101); jacobian.append(1)
    row_ind.append(23); col_ind.append(106); jacobian.append(lambtilde__**(-2))
    row_ind.append(24); col_ind.append(102); jacobian.append(1)
    row_ind.append(24); col_ind.append(106); jacobian.append(lambtilde__**(-2))
    row_ind.append(25); col_ind.append(83); jacobian.append(-lambtilde__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(25); col_ind.append(97); jacobian.append(1)
    row_ind.append(25); col_ind.append(98); jacobian.append(-pi2*i1__m1_*(1 - theta_lockdown*lockdown_policy)*lamtau__/theta)
    row_ind.append(25); col_ind.append(106); jacobian.append(-w__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(25); col_ind.append(107); jacobian.append(-pi2*ni__*i1__m1_*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(25); col_ind.append(171); jacobian.append(-pi2*ni__*(1 - theta_lockdown*lockdown_policy)*lamtau__/theta)
    row_ind.append(26); col_ind.append(83); jacobian.append(-lambtilde__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(26); col_ind.append(98); jacobian.append(1)
    row_ind.append(26); col_ind.append(106); jacobian.append(-w__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(27); col_ind.append(83); jacobian.append(-lambtilde__/theta)
    row_ind.append(27); col_ind.append(99); jacobian.append(1)
    row_ind.append(27); col_ind.append(106); jacobian.append(-w__/theta)
    row_ind.append(28); col_ind.append(4); jacobian.append(-betta*lambtilde__p1_)
    row_ind.append(28); col_ind.append(26); jacobian.append(-betta*(1 - delta + rk__p1_))
    row_ind.append(28); col_ind.append(106); jacobian.append(1)
    row_ind.append(29); col_ind.append(107); jacobian.append(-1)
    row_ind.append(29); col_ind.append(108); jacobian.append(1)
    row_ind.append(29); col_ind.append(109); jacobian.append(-1)
    row_ind.append(30); col_ind.append(3); jacobian.append(-ns__p1_*lambtilde__p1_)
    row_ind.append(30); col_ind.append(17); jacobian.append(theta*ns__p1_ - w__p1_*lambtilde__p1_ - pi2*i1__*lamtau__p1_*ni__p1_)
    row_ind.append(30); col_ind.append(18); jacobian.append(-pi2*i1__*lamtau__p1_*ns__p1_)
    row_ind.append(30); col_ind.append(20); jacobian.append(lambtilde__p1_ - pi1*i1__*lamtau__p1_*ci__p1_ - cs__p1_**(-1))
    row_ind.append(30); col_ind.append(21); jacobian.append(-pi1*i1__*lamtau__p1_*cs__p1_)
    row_ind.append(30); col_ind.append(26); jacobian.append(cs__p1_ - w__p1_*ns__p1_)
    row_ind.append(30); col_ind.append(27); jacobian.append(-pi3*i1__ - pi1*i1__*ci__p1_*cs__p1_ - pi2*i1__*ns__p1_*ni__p1_)
    row_ind.append(30); col_ind.append(29); jacobian.append(-1)
    row_ind.append(30); col_ind.append(91); jacobian.append(-lamtau__p1_*(pi3 + pi1*ci__p1_*cs__p1_ + pi2*ns__p1_*ni__p1_))
    row_ind.append(30); col_ind.append(109); jacobian.append(betta**(-1))
    row_ind.append(31); col_ind.append(3); jacobian.append(-ni__p1_*lambtilde__p1_)
    row_ind.append(31); col_ind.append(18); jacobian.append(theta*ni__p1_ - w__p1_*lambtilde__p1_)
    row_ind.append(31); col_ind.append(21); jacobian.append(lambtilde__p1_ - ci__p1_**(-1))
    row_ind.append(31); col_ind.append(26); jacobian.append(ci__p1_ - w__p1_*ni__p1_)
    row_ind.append(31); col_ind.append(28); jacobian.append(-1 + pid + pir)
    row_ind.append(31); col_ind.append(30); jacobian.append(-pir)
    row_ind.append(31); col_ind.append(108); jacobian.append(betta**(-1))
    row_ind.append(32); col_ind.append(3); jacobian.append(-nr__p1_*lambtilde__p1_)
    row_ind.append(32); col_ind.append(19); jacobian.append(theta*nr__p1_ - w__p1_*lambtilde__p1_)
    row_ind.append(32); col_ind.append(22); jacobian.append(lambtilde__p1_ - cr__p1_**(-1))
    row_ind.append(32); col_ind.append(26); jacobian.append(cr__p1_ - w__p1_*nr__p1_)
    row_ind.append(32); col_ind.append(30); jacobian.append(-1)
    row_ind.append(32); col_ind.append(110); jacobian.append(betta**(-1))
    row_ind.append(33); col_ind.append(26); jacobian.append(-Rb__*betta/pie__p1_)
    row_ind.append(33); col_ind.append(34); jacobian.append(Rb__*betta*lambtilde__p1_/pie__p1_**2)
    row_ind.append(33); col_ind.append(106); jacobian.append(1)
    row_ind.append(33); col_ind.append(113); jacobian.append(-betta*lambtilde__p1_/pie__p1_)
    row_ind.append(34); col_ind.append(34); jacobian.append(Rb__/pie__p1_**2)
    row_ind.append(34); col_ind.append(113); jacobian.append(-1/pie__p1_)
    row_ind.append(34); col_ind.append(118); jacobian.append(1)
    row_ind.append(35); col_ind.append(34); jacobian.append(-xi*gam*betta*Kf__p1_*pie__p1_**(-1 + gam/(-1 + gam))/(-1 + gam))
    row_ind.append(35); col_ind.append(37); jacobian.append(-xi*betta*pie__p1_**(gam/(-1 + gam)))
    row_ind.append(35); col_ind.append(80); jacobian.append(-gam*mc__*lambtilde__)
    row_ind.append(35); col_ind.append(106); jacobian.append(-y__*gam*mc__)
    row_ind.append(35); col_ind.append(115); jacobian.append(-y__*gam*lambtilde__)
    row_ind.append(35); col_ind.append(117); jacobian.append(1)
    row_ind.append(36); col_ind.append(34); jacobian.append(-xi*betta*F__p1_*pie__p1_**(-1 + (-1 + gam)**(-1))/(-1 + gam))
    row_ind.append(36); col_ind.append(36); jacobian.append(-xi*betta*pie__p1_**((-1 + gam)**(-1)))
    row_ind.append(36); col_ind.append(80); jacobian.append(-lambtilde__)
    row_ind.append(36); col_ind.append(106); jacobian.append(-y__)
    row_ind.append(36); col_ind.append(116); jacobian.append(1)
    row_ind.append(37); col_ind.append(114); jacobian.append(-xi*F__*pie__**(-1 + (-1 + gam)**(-1))*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**(-(-1 + gam))/(1 - xi*pie__**((-1 + gam)**(-1))))
    row_ind.append(37); col_ind.append(116); jacobian.append(-((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**(-(-1 + gam)))
    row_ind.append(37); col_ind.append(117); jacobian.append(1)
    row_ind.append(38); col_ind.append(114); jacobian.append((xi*gam*pie__**(-1 + gam/(-1 + gam))/((-1 + gam)*pbreve__m1_) - xi*(1 - xi)*gam*pie__**(-1 + (-1 + gam)**(-1))*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam/((-1 + gam)*(1 - xi*pie__**((-1 + gam)**(-1)))))/((1 - xi)*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam + xi*pie__**(gam/(-1 + gam))/pbreve__m1_)**2)
    row_ind.append(38); col_ind.append(119); jacobian.append(1)
    row_ind.append(38); col_ind.append(199); jacobian.append(-xi*pie__**(gam/(-1 + gam))/(pbreve__m1_**2*((1 - xi)*((1 - xi*pie__**((-1 + gam)**(-1)))/(1 - xi))**gam + xi*pie__**(gam/(-1 + gam))/pbreve__m1_)**2))
    row_ind.append(39); col_ind.append(80); jacobian.append(-rx/y__)
    row_ind.append(39); col_ind.append(113); jacobian.append(1)
    row_ind.append(39); col_ind.append(114); jacobian.append(-rpi/pie__)
    row_ind.append(39); col_ind.append(120); jacobian.append(rx/yF__)
    row_ind.append(40); col_ind.append(120); jacobian.append(1)
    row_ind.append(40); col_ind.append(122); jacobian.append(-A*nF__**(-1 + alfa)*alfa*pbreveF__*kF__m1_**(1 - alfa))
    row_ind.append(40); col_ind.append(159); jacobian.append(-A*nF__**alfa*kF__m1_**(1 - alfa))
    row_ind.append(40); col_ind.append(201); jacobian.append(-A*nF__**alfa*(1 - alfa)*pbreveF__*kF__m1_**(-alfa))
    row_ind.append(41); col_ind.append(123); jacobian.append(-alfa**(1 - alfa)*wF__**(-1 + alfa)*(1 - alfa)**(-(1 - alfa))*rkF__**(1 - alfa)/A)
    row_ind.append(41); col_ind.append(124); jacobian.append(-alfa**(-alfa)*wF__**alfa*(1 - alfa)**(1 - (1 - alfa))*rkF__**(-alfa)/A)
    row_ind.append(41); col_ind.append(155); jacobian.append(1)
    row_ind.append(42); col_ind.append(122); jacobian.append(-A*nF__**(-2 + alfa)*alfa*(-1 + alfa)*mcF__*kF__m1_**(1 - alfa))
    row_ind.append(42); col_ind.append(123); jacobian.append(1)
    row_ind.append(42); col_ind.append(155); jacobian.append(-A*nF__**(-1 + alfa)*alfa*kF__m1_**(1 - alfa))
    row_ind.append(42); col_ind.append(201); jacobian.append(-A*nF__**(-1 + alfa)*alfa*(1 - alfa)*mcF__*kF__m1_**(-alfa))
    row_ind.append(43); col_ind.append(121); jacobian.append(1)
    row_ind.append(43); col_ind.append(125); jacobian.append(-1)
    row_ind.append(43); col_ind.append(201); jacobian.append(-1 + delta)
    row_ind.append(44); col_ind.append(120); jacobian.append(1)
    row_ind.append(44); col_ind.append(125); jacobian.append(-1)
    row_ind.append(44); col_ind.append(126); jacobian.append(-1)
    row_ind.append(45); col_ind.append(122); jacobian.append(1)
    row_ind.append(45); col_ind.append(137); jacobian.append(-sF1__m1_)
    row_ind.append(45); col_ind.append(138); jacobian.append(-iF1__m1_)
    row_ind.append(45); col_ind.append(139); jacobian.append(-rF1__m1_)
    row_ind.append(45); col_ind.append(208); jacobian.append(-nsF__)
    row_ind.append(45); col_ind.append(211); jacobian.append(-niF__)
    row_ind.append(45); col_ind.append(214); jacobian.append(-nrF__)
    row_ind.append(46); col_ind.append(126); jacobian.append(1)
    row_ind.append(46); col_ind.append(140); jacobian.append(-sF1__m1_)
    row_ind.append(46); col_ind.append(141); jacobian.append(-iF1__m1_)
    row_ind.append(46); col_ind.append(142); jacobian.append(-rF1__m1_)
    row_ind.append(46); col_ind.append(208); jacobian.append(-csF__)
    row_ind.append(46); col_ind.append(211); jacobian.append(-ciF__)
    row_ind.append(46); col_ind.append(214); jacobian.append(-crF__)
    row_ind.append(47); col_ind.append(137); jacobian.append(-pi2*niF__*(1 - theta_lockdown*lockdown_policy)**2*sF1__m1_*iF1__m1_)
    row_ind.append(47); col_ind.append(138); jacobian.append(-pi2*nsF__*(1 - theta_lockdown*lockdown_policy)**2*sF1__m1_*iF1__m1_)
    row_ind.append(47); col_ind.append(140); jacobian.append(-pi1*ciF__*(1 - theta_lockdown*lockdown_policy)**2*sF1__m1_*iF1__m1_)
    row_ind.append(47); col_ind.append(141); jacobian.append(-pi1*csF__*(1 - theta_lockdown*lockdown_policy)**2*sF1__m1_*iF1__m1_)
    row_ind.append(47); col_ind.append(144); jacobian.append(1)
    row_ind.append(47); col_ind.append(208); jacobian.append(-(1 - theta_lockdown*lockdown_policy)**2*(pi3*iF1__m1_ + pi1*csF__*ciF__*iF1__m1_ + pi2*niF__*nsF__*iF1__m1_))
    row_ind.append(47); col_ind.append(211); jacobian.append(-(pi3*sF1__m1_ + pi1*csF__*ciF__*sF1__m1_ + pi2*niF__*nsF__*sF1__m1_)*(1 - theta_lockdown*lockdown_policy)**2)
    row_ind.append(48); col_ind.append(137); jacobian.append(-pi2*niF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*sF2__m1_*iF2__m1_)
    row_ind.append(48); col_ind.append(138); jacobian.append(-pi2*nsF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*sF2__m1_*iF2__m1_)
    row_ind.append(48); col_ind.append(140); jacobian.append(-pi1*ciF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*sF2__m1_*iF2__m1_)
    row_ind.append(48); col_ind.append(141); jacobian.append(-pi1*csF__*(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*sF2__m1_*iF2__m1_)
    row_ind.append(48); col_ind.append(145); jacobian.append(1)
    row_ind.append(48); col_ind.append(209); jacobian.append(-(1 - theta_lockdown*lockdown_policy)**2*(pi3*mult*iF2__m1_ + pi1*csF__*ciF__*iF2__m1_ + pi2*niF__*nsF__*iF2__m1_)*virus_resistant_strain)
    row_ind.append(48); col_ind.append(212); jacobian.append(-(1 - theta_lockdown*lockdown_policy)**2*virus_resistant_strain*(pi3*mult*sF2__m1_ + pi1*csF__*ciF__*sF2__m1_ + pi2*niF__*nsF__*sF2__m1_))
    row_ind.append(49); col_ind.append(143); jacobian.append(1)
    row_ind.append(49); col_ind.append(144); jacobian.append(-1)
    row_ind.append(49); col_ind.append(145); jacobian.append(-1)
    row_ind.append(50); col_ind.append(128); jacobian.append(1)
    row_ind.append(50); col_ind.append(136); jacobian.append(1)
    row_ind.append(50); col_ind.append(144); jacobian.append(1)
    row_ind.append(50); col_ind.append(208); jacobian.append(-1)
    row_ind.append(51); col_ind.append(129); jacobian.append(1)
    row_ind.append(51); col_ind.append(145); jacobian.append(1)
    row_ind.append(51); col_ind.append(209); jacobian.append(-1)
    row_ind.append(52); col_ind.append(127); jacobian.append(1)
    row_ind.append(52); col_ind.append(136); jacobian.append(Subs(Derivative(IfThenElse(_xi_1, sF__m1_ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__m1_ - tauF__ - vF__)) + Subs(Derivative(IfThenElse(sF__m1_ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__m1_ - tauF__ - vF__)))
    row_ind.append(52); col_ind.append(143); jacobian.append(Subs(Derivative(IfThenElse(_xi_1, sF__m1_ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__m1_ - tauF__ - vF__)) + Subs(Derivative(IfThenElse(sF__m1_ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__m1_ - tauF__ - vF__)))
    row_ind.append(52); col_ind.append(207); jacobian.append(-Subs(Derivative(IfThenElse(_xi_1, sF__m1_ - tauF__ - vF__, 0), _xi_1), (_xi_1), (sF__m1_ - tauF__ - vF__)) - Subs(Derivative(IfThenElse(sF__m1_ - tauF__ - vF__, _xi_2, 0), _xi_2), (_xi_2), (sF__m1_ - tauF__ - vF__)))
    row_ind.append(53); col_ind.append(131); jacobian.append(1)
    row_ind.append(53); col_ind.append(144); jacobian.append(-1)
    row_ind.append(53); col_ind.append(211); jacobian.append(-1 + pid + pir)
    row_ind.append(53); col_ind.append(240); jacobian.append(-1)
    row_ind.append(54); col_ind.append(132); jacobian.append(1)
    row_ind.append(54); col_ind.append(145); jacobian.append(-virus_resistant_strain)
    row_ind.append(54); col_ind.append(212); jacobian.append(-1 - (-pir - pid/mult2)*virus_resistant_strain)
    row_ind.append(54); col_ind.append(241); jacobian.append(-1)
    row_ind.append(55); col_ind.append(130); jacobian.append(1)
    row_ind.append(55); col_ind.append(131); jacobian.append(-1)
    row_ind.append(55); col_ind.append(132); jacobian.append(-1)
    row_ind.append(56); col_ind.append(134); jacobian.append(1)
    row_ind.append(56); col_ind.append(136); jacobian.append(-1)
    row_ind.append(56); col_ind.append(211); jacobian.append(-pir)
    row_ind.append(56); col_ind.append(214); jacobian.append(-1)
    row_ind.append(57); col_ind.append(135); jacobian.append(1)
    row_ind.append(57); col_ind.append(212); jacobian.append(-pir)
    row_ind.append(57); col_ind.append(215); jacobian.append(-1)
    row_ind.append(58); col_ind.append(133); jacobian.append(1)
    row_ind.append(58); col_ind.append(134); jacobian.append(-1)
    row_ind.append(58); col_ind.append(135); jacobian.append(-1)
    row_ind.append(59); col_ind.append(136); jacobian.append(1)
    row_ind.append(59); col_ind.append(208); jacobian.append(-vaccination_rate)
    row_ind.append(60); col_ind.append(151); jacobian.append(1)
    row_ind.append(60); col_ind.append(211); jacobian.append(-pid)
    row_ind.append(60); col_ind.append(212); jacobian.append(-pid/mult2)
    row_ind.append(60); col_ind.append(231); jacobian.append(-1)
    row_ind.append(60); col_ind.append(242); jacobian.append(-1)
    row_ind.append(61); col_ind.append(152); jacobian.append(1)
    row_ind.append(61); col_ind.append(211); jacobian.append(pid)
    row_ind.append(61); col_ind.append(212); jacobian.append(pid/mult2)
    row_ind.append(61); col_ind.append(232); jacobian.append(-1)
    row_ind.append(62); col_ind.append(140); jacobian.append(1)
    row_ind.append(62); col_ind.append(141); jacobian.append(-pi1*lamtauF__*iF1__m1_/(lambtildeF__ - pi1*ciF__*lamtauF__*iF1__m1_)**2)
    row_ind.append(62); col_ind.append(146); jacobian.append((lambtildeF__ - pi1*ciF__*lamtauF__*iF1__m1_)**(-2))
    row_ind.append(62); col_ind.append(147); jacobian.append(-pi1*ciF__*iF1__m1_/(lambtildeF__ - pi1*ciF__*lamtauF__*iF1__m1_)**2)
    row_ind.append(62); col_ind.append(211); jacobian.append(-pi1*ciF__*lamtauF__/(lambtildeF__ - pi1*ciF__*lamtauF__*iF1__m1_)**2)
    row_ind.append(63); col_ind.append(141); jacobian.append(1)
    row_ind.append(63); col_ind.append(146); jacobian.append(lambtildeF__**(-2))
    row_ind.append(64); col_ind.append(142); jacobian.append(1)
    row_ind.append(64); col_ind.append(146); jacobian.append(lambtildeF__**(-2))
    row_ind.append(65); col_ind.append(123); jacobian.append(-(1 - theta_lockdown*lockdown_policy)*lambtildeF__/theta)
    row_ind.append(65); col_ind.append(137); jacobian.append(1)
    row_ind.append(65); col_ind.append(138); jacobian.append(-pi2*(1 - theta_lockdown*lockdown_policy)*lamtauF__*iF1__m1_/theta)
    row_ind.append(65); col_ind.append(146); jacobian.append(-wF__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(65); col_ind.append(147); jacobian.append(-pi2*niF__*(1 - theta_lockdown*lockdown_policy)*iF1__m1_/theta)
    row_ind.append(65); col_ind.append(211); jacobian.append(-pi2*niF__*(1 - theta_lockdown*lockdown_policy)*lamtauF__/theta)
    row_ind.append(66); col_ind.append(123); jacobian.append(-(1 - theta_lockdown*lockdown_policy)*lambtildeF__/theta)
    row_ind.append(66); col_ind.append(138); jacobian.append(1)
    row_ind.append(66); col_ind.append(146); jacobian.append(-wF__*(1 - theta_lockdown*lockdown_policy)/theta)
    row_ind.append(67); col_ind.append(123); jacobian.append(-lambtildeF__/theta)
    row_ind.append(67); col_ind.append(139); jacobian.append(1)
    row_ind.append(67); col_ind.append(146); jacobian.append(-wF__/theta)
    row_ind.append(68); col_ind.append(44); jacobian.append(-betta*lambtildeF__p1_)
    row_ind.append(68); col_ind.append(66); jacobian.append(-betta*(1 - delta + rkF__p1_))
    row_ind.append(68); col_ind.append(146); jacobian.append(1)
    row_ind.append(69); col_ind.append(147); jacobian.append(-1)
    row_ind.append(69); col_ind.append(148); jacobian.append(1)
    row_ind.append(69); col_ind.append(149); jacobian.append(-1)
    row_ind.append(70); col_ind.append(43); jacobian.append(-lambtildeF__p1_*nsF__p1_)
    row_ind.append(70); col_ind.append(57); jacobian.append(theta*nsF__p1_ - wF__p1_*lambtildeF__p1_ - pi2*iF1__*lamtauF__p1_*niF__p1_)
    row_ind.append(70); col_ind.append(58); jacobian.append(-pi2*iF1__*lamtauF__p1_*nsF__p1_)
    row_ind.append(70); col_ind.append(60); jacobian.append(lambtildeF__p1_ - pi1*iF1__*lamtauF__p1_*ciF__p1_ - csF__p1_**(-1))
    row_ind.append(70); col_ind.append(61); jacobian.append(-pi1*iF1__*lamtauF__p1_*csF__p1_)
    row_ind.append(70); col_ind.append(66); jacobian.append(csF__p1_ - wF__p1_*nsF__p1_)
    row_ind.append(70); col_ind.append(67); jacobian.append(-pi3*iF1__ - pi1*iF1__*csF__p1_*ciF__p1_ - pi2*iF1__*niF__p1_*nsF__p1_)
    row_ind.append(70); col_ind.append(69); jacobian.append(-1)
    row_ind.append(70); col_ind.append(131); jacobian.append(-(pi3 + pi1*csF__p1_*ciF__p1_ + pi2*niF__p1_*nsF__p1_)*lamtauF__p1_)
    row_ind.append(70); col_ind.append(149); jacobian.append(betta**(-1))
    row_ind.append(71); col_ind.append(43); jacobian.append(-lambtildeF__p1_*niF__p1_)
    row_ind.append(71); col_ind.append(58); jacobian.append(theta*niF__p1_ - wF__p1_*lambtildeF__p1_)
    row_ind.append(71); col_ind.append(61); jacobian.append(lambtildeF__p1_ - ciF__p1_**(-1))
    row_ind.append(71); col_ind.append(66); jacobian.append(ciF__p1_ - wF__p1_*niF__p1_)
    row_ind.append(71); col_ind.append(70); jacobian.append(-pir)
    row_ind.append(71); col_ind.append(148); jacobian.append(-1 + pid + pir + betta**(-1))
    row_ind.append(72); col_ind.append(43); jacobian.append(-lambtildeF__p1_*nrF__p1_)
    row_ind.append(72); col_ind.append(59); jacobian.append(theta*nrF__p1_ - wF__p1_*lambtildeF__p1_)
    row_ind.append(72); col_ind.append(62); jacobian.append(lambtildeF__p1_ - crF__p1_**(-1))
    row_ind.append(72); col_ind.append(66); jacobian.append(crF__p1_ - wF__p1_*nrF__p1_)
    row_ind.append(72); col_ind.append(70); jacobian.append(-1)
    row_ind.append(72); col_ind.append(150); jacobian.append(betta**(-1))
    row_ind.append(73); col_ind.append(66); jacobian.append(-betta*RbF__/pieF__p1_)
    row_ind.append(73); col_ind.append(74); jacobian.append(betta*RbF__*lambtildeF__p1_/pieF__p1_**2)
    row_ind.append(73); col_ind.append(146); jacobian.append(1)
    row_ind.append(73); col_ind.append(153); jacobian.append(-betta*lambtildeF__p1_/pieF__p1_)
    row_ind.append(74); col_ind.append(74); jacobian.append(RbF__/pieF__p1_**2)
    row_ind.append(74); col_ind.append(153); jacobian.append(-1/pieF__p1_)
    row_ind.append(74); col_ind.append(158); jacobian.append(1)
    row_ind.append(75); col_ind.append(74); jacobian.append(-gam*betta*pieF__p1_**(-1 + gam/(-1 + gam))*xi_flex*KfF__p1_/(-1 + gam))
    row_ind.append(75); col_ind.append(77); jacobian.append(-betta*pieF__p1_**(gam/(-1 + gam))*xi_flex)
    row_ind.append(75); col_ind.append(120); jacobian.append(-gam*mcF__*lambtildeF__)
    row_ind.append(75); col_ind.append(146); jacobian.append(-gam*yF__*mcF__)
    row_ind.append(75); col_ind.append(155); jacobian.append(-gam*yF__*lambtildeF__)
    row_ind.append(75); col_ind.append(157); jacobian.append(1)
    row_ind.append(76); col_ind.append(74); jacobian.append(-betta*pieF__p1_**(-1 + (-1 + gam)**(-1))*xi_flex*FF__p1_/(-1 + gam))
    row_ind.append(76); col_ind.append(76); jacobian.append(-betta*pieF__p1_**((-1 + gam)**(-1))*xi_flex)
    row_ind.append(76); col_ind.append(120); jacobian.append(-lambtildeF__)
    row_ind.append(76); col_ind.append(146); jacobian.append(-yF__)
    row_ind.append(76); col_ind.append(156); jacobian.append(1)
    row_ind.append(77); col_ind.append(154); jacobian.append(-FF__*pieF__**(-1 + (-1 + gam)**(-1))*((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**(-(-1 + gam))*xi_flex/(1 - pieF__**((-1 + gam)**(-1))*xi_flex))
    row_ind.append(77); col_ind.append(156); jacobian.append(-((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**(-(-1 + gam)))
    row_ind.append(77); col_ind.append(157); jacobian.append(1)
    row_ind.append(78); col_ind.append(154); jacobian.append((gam*pieF__**(-1 + gam/(-1 + gam))*xi_flex/((-1 + gam)*pbreveF__m1_) - gam*pieF__**(-1 + (-1 + gam)**(-1))*((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*xi_flex*(1 - xi_flex)/((-1 + gam)*(1 - pieF__**((-1 + gam)**(-1))*xi_flex)))/(((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*(1 - xi_flex) + pieF__**(gam/(-1 + gam))*xi_flex/pbreveF__m1_)**2)
    row_ind.append(78); col_ind.append(159); jacobian.append(1)
    row_ind.append(78); col_ind.append(239); jacobian.append(-pieF__**(gam/(-1 + gam))*xi_flex/((((1 - pieF__**((-1 + gam)**(-1))*xi_flex)/(1 - xi_flex))**gam*(1 - xi_flex) + pieF__**(gam/(-1 + gam))*xi_flex/pbreveF__m1_)**2*pbreveF__m1_**2))
    row_ind.append(79); col_ind.append(153); jacobian.append(1)
    row_ind.append(79); col_ind.append(154); jacobian.append(-rpi/pieF__)

    if order == 1:
        return [function, jacobian, row_ind, col_ind]
